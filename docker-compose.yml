version: "3"
services:

  nosql-mongodb:
    build:
      dockerfile: Dockerfile.mongodb
      context: ./mongodb
    container_name: nosql-mongodb
    ports: 
      - "27019:27017"
    privileged: true
    command: /lib/systemd/systemd
    volumes:
      - ./db/:/data/db
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

  nosql-db:
    image: mvertes/alpine-mongo
    ports:
      - "27018:27017"
    container_name: nosql-db
    volumes:
      - ./db/:/data/db
      - /var/run/docker.sock:/var/run/docker.sock


  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  products:
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "nosql-db"
      - "nosql-mongodb"
      - "rabbitmq"
    volumes:
      - .:/app
      - /app/products/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./products/.env.dev

  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - "nosql-db"
      - "nosql-mongodb"
      - "rabbitmq"
    volumes:
      - .:/app
      - /app/shopping/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./shopping/.env.dev

  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db"
      - "nosql-mongodb"
      - "rabbitmq"
    volumes:
      - .:/app/
      - /app/customer/node_modules
      - /var/run/docker.sock:/var/run/docker.sock

    env_file:
      - ./customer/.env.dev

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - products
      - shopping
      - customer
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
